// -------------------
// components:
// -------------------
// - sf-row
// - sf-col
// - sf-wrap
// - sf-grid
// - sf-pointer-events
// - sf-aspect-ratio
// - sf-group
// -------------------
// brand prefix:
// -------------------
$brand: "css-";
// -------------------
// breakpoints:
// -------------------
$small: 425px;
$medium: 768px;
$large: 1024px;
$breakpoints: (
  "lg": $large,
  "md": $medium,
  "sm": $small,
);
// -------------------
// sizes:
// -------------------
$sizes: (
  "none": 0px,
  "xs": 4px,
  "sm": 8px,
  "sm\\+": 12px,
  "md": 16px,
  "md\\+": 24px,
  "lg": 32px,
  "xl": 64px,
  "2xl": 128px,
  "3xl": 256px,
);
// -------------------
// colors:
// -------------------
$colors: (
//  "primary": $primary,
//  "secondary": $secondary,
//  "medium-gray": $medium-gray,
);
// -------------------
// -------------------
// -------------------
html,
body {
  height: 100%;
}
body {
  margin: 0;
}
* {
  box-sizing: border-box;
}
// -------------------
// padding
@mixin padding($bp: "") {
  @each $sizeName,
  $size in $sizes {
    .#{$bp}p-#{$sizeName} {
      padding: $size;
    }
    .#{$bp}py-#{$sizeName} {
      padding-top: $size;
      padding-bottom: $size;
    }
    .#{$bp}px-#{$sizeName} {
      padding-left: $size;
      padding-right: $size;
    }
    @each $direction,
    $short in ("top": "t", "right": "r", "bottom": "b", "left": "l") {
      .#{$bp}p#{$short}-#{$sizeName} {
        padding-#{$direction}: $size;
      }
    }
  }
}
@include padding;
@each $bp,
$maxWidth in $breakpoints {
  @media screen and (max-width: $maxWidth) {
    @include padding($bp + '\\:');
  }
}
// -------------------
// margin
$marginSizes: map-merge($sizes, ('auto': auto));
@mixin margin($bp: "") {
  @each $sizeName,
  $size in $marginSizes {
    .#{$bp}m-#{$sizeName} {
      margin: $size;
    }
    .#{$bp}my-#{$sizeName} {
      margin-top: $size;
      margin-bottom: $size;
    }
    .#{$bp}mx-#{$sizeName} {
      margin-left: $size;
      margin-right: $size;
    }
    @each $direction,
    $short in ("top": "t", "right": "r", "bottom": "b", "left": "l") {
      .#{$bp}m#{$short}-#{$sizeName} {
        margin-#{$direction}: $size;
      }
    }
  }
}
@include margin;
@each $bp,
$maxWidth in $breakpoints {
  @media screen and (max-width: $maxWidth) {
    @include margin($bp + '\\:');
  }
}
// -------------------
// border-radius
@each $name,
$size in $sizes {
  .border-radius-#{$name} {
    border-radius: $size;
  }
  .border-radius-full {
    border-radius: 9999px;
  }
}
// -------------------
/// Quick grid
@mixin grid-template($i) {
  -ms-grid-columns: repeat($i, 1fr);
  grid-template-columns: repeat($i, 1fr);
}
.#{$brand}grid {
  display: -ms-grid;
  display: grid;
  &.--inline {
    display: -ms-inline-grid;
    display: inline-grid;
  }
  @for $i from 1 through 4 {
    &.--col-#{$i} {
      @include grid-template($i);
    }
  }
  @each $size,
  $max-width in $breakpoints {
    @media screen and (max-width: $max-width) {
      @for $i from 1 through 4 {
        &.--#{$size}\:col-#{$i} {
          @include grid-template($i);
        }
      }
    }
  }
  @each $size-key,
  $size in $sizes {
    &.--gap-#{$size-key} {
      gap: $size;
    }
    &.--row-gap-#{$size-key} {
      row-gap: $size;
    }
    &.--column-gap-#{$size-key} {
      column-gap: $size;
    }
  }
  @each $breakpoing-key,
  $max-width in $breakpoints {
    @media screen and (max-width: $max-width) {
      @each $size-key,
      $size in $sizes {
        &.--#{$breakpoing-key}\:gap-#{$size-key} {
          gap: $size;
        }
        &.--#{$breakpoing-key}\:row-gap-#{$size-key} {
          row-gap: $size;
        }
        &.--#{$breakpoing-key}\:column-gap-#{$size-key} {
          column-gap: $size;
        }
      }
    }
  }
}
.#{$brand}wrap {
  display: flex;
  flex-wrap: wrap;
  align-items: baseline;
  @each $sizeKey,
  $size in $sizes {
    &.--spacing-#{$sizeKey} {
      margin: -#{$size / 2};
      > * {
        margin: #{$size / 2};
      }
    }
  }
}
@mixin spacer-row {
  @each $size,
  $margin in $sizes {
    &.--spacing-#{$size} {
      > *:not(:first-child) {
        margin-left: $margin;
      }
    }
  }
}
@mixin spacer-row-responsive {
  @each $breakpoint,
  $max-width in $breakpoints {
    @media screen and (max-width: $max-width) {
      @each $size,
      $margin in $sizes {
        &.--#{$breakpoint}\:spacing-#{$size} {
          > *:not(:first-child) {
            margin-left: $margin;
          }
        }
      }
    }
  }
}
@mixin spacer-row-cleanup {
  @each $size,
  $margin in $sizes {
    &.--spacing-#{$size} {
      > *:not(:first-child) {
        margin-left: 0;
      }
    }
  }
}
@mixin spacer-col {
  @each $size,
  $margin in $sizes {
    &.--spacing-#{$size} {
      > *:not(:first-child) {
        margin-top: $margin;
      }
    }
  }
}
@mixin spacer-col-responsive {
  @each $breakpoint,
  $max-width in $breakpoints {
    @media screen and (max-width: $max-width) {
      @each $size,
      $margin in $sizes {
        &.--#{$breakpoint}\:spacing-#{$size} {
          > *:not(:first-child) {
            margin-top: $margin;
          }
        }
      }
    }
  }
}
@mixin spacer-col-cleanup {
  @each $size,
  $margin in $sizes {
    &.--spacing-#{$size} {
      > *:not(:first-child) {
        margin-top: 0;
      }
    }
  }
}
// -------------------
/// Row
.#{$brand}row {
  display: flex;
  @include spacer-row;
  @include spacer-row-responsive;
  @each $key,
  $maxWidth in $breakpoints {
    &.--#{$key}\:col {
      @media screen and (max-width: $maxWidth) {
        flex-direction: column;
        @include spacer-col;
        @include spacer-col-responsive;
        @include spacer-row-cleanup;
      }
    }
  }
}
// -------------------
/// Col
.#{$brand}col {
  display: flex;
  flex-direction: column;
  @include spacer-col;
  @include spacer-col-responsive;
  @each $key,
  $maxWidth in $breakpoints {
    &.--#{$key}\:row {
      @media screen and (max-width: $maxWidth) {
        flex-direction: row;
        @include spacer-row;
        @include spacer-row-responsive;
        @include spacer-col-cleanup;
      }
    }
  }
}
@mixin flex-rules ($p: "") {
  &.--#{$p}inline {
    display: inline-flex;
  }
  &.--#{$p}align-items-baseline {
    align-items: baseline;
  }
  &.--#{$p}align-items-center {
    align-items: center;
  }
  &.--#{$p}align-items-stretch {
    align-items: stretch;
  }
  &.--#{$p}align-items-flex-start {
    align-items: flex-start;
  }
  &.--#{$p}align-items-flex-end {
    align-items: flex-end;
  }
  &.--#{$p}wrap {
    flex-wrap: wrap;
  }
  &.--#{$p}justify-content-center {
    justify-content: center;
  }
  &.--#{$p}justify-content-flex-end {
    justify-content: flex-end;
  }
  &.--#{$p}justify-content-space-evenly {
    justify-content: space-evenly;
  }
  &.--#{$p}justify-content-space-between {
    justify-content: space-between;
  }
}
.#{$brand}wrap,
.#{$brand}row,
.#{$brand}col {
  @include flex-rules();
  @each $breakpoint,
  $maxWidth in $breakpoints {
    @media screen and (max-width: $maxWidth) {
      @include flex-rules($breakpoint + '\\:');
    }
  }
}
// -------------------
/// pointer-events
.#{$brand}pointer-events {
  &.--none {
    pointer-events: none;
    &.--shallow {
      * {
        pointer-events: initial;
      }
    }
  }
  &.--auto {
    pointer-events: auto;
  }
}
// -------------------
/// pointer-events
.#{$brand}aspect-ratio {
  &.--ratio-16-9 {
    &::before {
      content: "";
      display: block;
      padding-bottom: calc((9 / 16) * 100%);
    }
  }
  & > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}
/// Prevent text overflow with ellipsis
.no-text-overflow {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
@mixin width-rules ($b: "") {
  @each $size, $width in $sizes {
    .#{$b}w-#{$size} {
      width: $width;
    }
    .#{$b}max-w-#{$size} {
      max-width: $width;
    } 
  }
  .#{$b}w-auto {
    width: auto;
  }
  .#{$b}w-full {
    width: 100%;
  }
  .#{$b}max-w-full {
    max-width: 100%;
  }
  .#{$b}max-w-centerer {
    max-width: 1230px;
  }
  .#{$b}max-w-half-centerer {
    max-width: 615px;
  }
  .#{$b}max-w-home-centerer {
    max-width: 1360px;
  }
}
@mixin height-rules ($p: "") {
  .#{$p}h-auto {
    height: auto;
  }
  .#{$p}h-full {
    height: 100%;
  }
  .#{$p}max-h-none {
    max-height: none;
  }
  .#{$p}max-h-full {
    max-height: 100%;
  }
}
$border-directions: (
  '',
  '-top',
  '-right',
  '-bottom',
  '-left'
);
@mixin border-rules ($p: "") {
  .#{$p}border-none {
    border: none;
  }
  @each $direction in $border-directions {
    $border-widths: (1px, 2px);
    @each $border-width in $border-widths {
      .#{$p}border#{$direction}-width-#{$border-width} {
        border-style: solid;
        border#{$direction}-width: $border-width;
      }
    }
    @each $color-name, $color-value in $colors {
      .#{$p}border#{$direction}-color-#{$color-name} {
        border#{$direction}-color: $color-value;
      }
    }
  }
}
@mixin common-rules($p: "") {
  @include border-rules($p);
  .#{$p}cursor-pointer {
    cursor: pointer;
  }
  .#{$p}text-decoration-underline {
    text-decoration: underline;
  }
  .#{$p}text-decoration-line-through {
    text-decoration: line-through;
  }
  .#{$p}transition-all-200-ease {
    transition: all 200ms ease;
  }
  .#{$p}transform-scale-110 {
    transform: scale(1.1);
  }
  .#{$p}opacity-50 {
    opacity: .5;
  }
}
@mixin common-responsive-rules($p: "") {
  @include width-rules($p);
  @include height-rules($p);
  .#{$p}display-none {
    display: none;
  }
  .#{$p}display-block {
    display: block;
  }
  .#{$p}display-inline-block {
    display: inline-block;
  }
  .#{$p}display-flex {
    display: flex;
  }
  .#{$p}overflow-auto {
    overflow: auto;
  }
  .#{$p}overflow-hidden {
    overflow: hidden;
  }
  .#{$p}text-align-center {
    text-align: center;
  }
  .#{$p}text-align-left {
    text-align: left;
  }
  .#{$p}text-align-right {
    text-align: right;
  }
  .#{$p}position-relative {
    position: relative;
  }
  .#{$p}position-absolute {
    position: absolute;
  }
  .#{$p}position-sticky {
    position: sticky;
  }
  .#{$p}top-0 {
    top: 0;
  }
  .#{$p}right-0 {
    right: 0;
  }
  .#{$p}bottom-0 {
    bottom: 0;
  }
  .#{$p}left-0 {
    left: 0;
  }
  .#{$p}object-fit-cover {
    object-fit: cover;
  }
  .#{$p}flex-grow {
    flex-grow: 1;
  }
  .#{$p}flex-basis-1\/2 {
    flex-basis: 50%;
  }
  .#{$p}flex-basis-1\/3 {
    flex-basis: 33.33%;
  }
  .#{$p}flex-basis-1\/4 {
    flex-basis: 25%;
  }
  .#{$p}flex-basis-2\/3 {
    flex-basis: 66.66%;
  }
  .#{$p}flex-basis-3\/4 {
    flex-basis: 75%;
  }
  .#{$p}flex-basis-0 {
    flex-basis: 0;
  }
  .#{$p}no-shrink {
    flex-shrink: 0;
  }
  .#{$p}align-self-center {
    align-self: center;
  }
  .#{$p}align-self-flex-start {
    align-self: flex-start;
  }
  .#{$p}align-self-stretch {
    align-self: stretch;
  }
}
// -------------------
@include common-rules();
@include common-responsive-rules();
@each $breakpoint,
$maxWidth in $breakpoints {
  @media screen and (max-width: $maxWidth) {
    @include common-responsive-rules($breakpoint + '\\:');
  }
}
.#{$brand}group {
  &:hover {
    $prefix: "group-hover\\:";
    @include common-rules($prefix);
    @include common-responsive-rules($prefix);
  }
}
